[{"D:\\react-project\\04-exclusive-platform\\src\\index.tsx":"1","D:\\react-project\\04-exclusive-platform\\src\\App.tsx":"2","D:\\react-project\\04-exclusive-platform\\src\\reportWebVitals.ts":"3","D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard.tsx":"4","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerMD.ts":"5","D:\\react-project\\04-exclusive-platform\\src\\Redux\\store.ts":"6","D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard\\Dashboard_con.ts":"7","D:\\react-project\\04-exclusive-platform\\src\\api\\api.ts":"8","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerGoogleLogin.ts":"9","D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\header.tsx":"10","D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\headerC.ts":"11","D:\\react-project\\04-exclusive-platform\\src\\Redux\\types.ts":"12","D:\\react-project\\04-exclusive-platform\\src\\Redux\\interfaces.ts":"13","D:\\react-project\\04-exclusive-platform\\src\\Components\\ToDoList\\ToDoList.tsx":"14","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerToDoList.ts":"15","D:\\react-project\\04-exclusive-platform\\src\\Components\\Home.tsx":"16","D:\\react-project\\04-exclusive-platform\\src\\Redux\\Global_functions.ts":"17","D:\\react-project\\04-exclusive-platform\\src\\Components\\weather\\Weather.tsx":"18","D:\\react-project\\04-exclusive-platform\\src\\Components\\MovieDB\\Movies.tsx":"19"},{"size":702,"mtime":1608063853192,"results":"20","hashOfConfig":"21"},{"size":708,"mtime":1609094497035,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1218,"mtime":1608064694516,"results":"24","hashOfConfig":"21"},{"size":765,"mtime":1607548216161,"results":"25","hashOfConfig":"21"},{"size":550,"mtime":1608405103096,"results":"26","hashOfConfig":"21"},{"size":452,"mtime":1608746642751,"results":"27","hashOfConfig":"21"},{"size":106,"mtime":1607364369970,"results":"28","hashOfConfig":"21"},{"size":1053,"mtime":1608556017486,"results":"29","hashOfConfig":"21"},{"size":2488,"mtime":1609351304701,"results":"30","hashOfConfig":"21"},{"size":838,"mtime":1608494977087,"results":"31","hashOfConfig":"21"},{"size":420,"mtime":1608667462796,"results":"32","hashOfConfig":"21"},{"size":769,"mtime":1607708688166,"results":"33","hashOfConfig":"21"},{"size":7085,"mtime":1608669356818,"results":"34","hashOfConfig":"21"},{"size":2428,"mtime":1608920877146,"results":"35","hashOfConfig":"21"},{"size":268,"mtime":1608315727163,"results":"36","hashOfConfig":"21"},{"size":350,"mtime":1608666049089,"results":"37","hashOfConfig":"21"},{"size":7486,"mtime":1609351017832,"results":"38","hashOfConfig":"21"},{"size":2273,"mtime":1609360655125,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"du34is",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"D:\\react-project\\04-exclusive-platform\\src\\index.tsx",[],["91","92"],"D:\\react-project\\04-exclusive-platform\\src\\App.tsx",["93"],"import React, { useState } from \"react\";\nimport \"./App.scss\";\n\nimport { Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\"\nimport ToDoList from \"./Components/ToDoList/ToDoList\";\nimport Weather from \"./Components/weather/Weather\";\nimport Movies from \"./Components/MovieDB/Movies\";\n\n\n\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n\n\n\n    \n     <Route path = \"/home\" render = {()=><main className=\"app_wrapper\"> <Home/> </main>}></Route> \n  \n      <Route path = \"/ToDoList\" render = {() => <ToDoList/>}></Route>\n      <Route path = \"/Weather\" render = {() => <Weather/>}></Route>\n      <Route path = \"/TopMovies\" render = {() => <Movies/>}></Route>\n      </>\n  );\n};\n\nexport default App;\n",["94","95"],"D:\\react-project\\04-exclusive-platform\\src\\reportWebVitals.ts",[],["96","97"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard.tsx",["98"],"import React from 'react';\r\nimport s from \"./../styles/main_dashborad.module.css\";\r\nimport { WrapperDash } from './../Redux/interfaces';\r\nimport { Route , Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst MainDashBoard:React.FC<WrapperDash> = ({mainDash}) =>{\r\ndebugger\r\n\r\n\r\n\r\n    return(\r\n        <section className = {s.section_dashboard}>\r\n            <div className={s.grid}>\r\n                \r\n                   {\r\n                    mainDash.map(dash => (\r\n                        dash.isMain === true ? \r\n                       <Link to = {`/${dash.name.split(' ').join('')}`} className={s.main_section} key = {dash.id}> \r\n                              <div className={s.main_name_section}>{dash.name}</div>\r\n                              </Link>  \r\n                         : \r\n                         <Link to = {`/${dash.name.split(' ').join('')}`} className={s.section} key = {dash.id}>\r\n                              <div className={s.name_section}>{dash.name}</div>\r\n                          </Link>  \r\n                        \r\n                    ))\r\n                \r\n                }\r\n                   \r\n            \r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default MainDashBoard;","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerMD.ts",["99","100"],"import {Settings} from '@material-ui/icons';\r\nimport { Reducer } from 'react';\r\nimport { WrapperDash } from './interfaces';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialState : WrapperDash = {\r\n    mainDash: [\r\n        {id:1 ,name : \"Settings\" , url : \"\" , isMain : true , action : \"\"},\r\n        {id:2 ,name : \"ToDo List\" , url : \"\", isMain : false , action : \"\"},\r\n        {id:3 ,name : \"Course Valut\",  url : \"\",  isMain : false , action : \"\"},\r\n        {id:4 ,name : \"Top Movies\" , url : \"\",  isMain : false , action : \"\"},\r\n        {id:5 ,name : \"Weather\" , url : \"\",  isMain : false , action : \"\"},\r\n    ],\r\n}\r\n\r\nconst reducerDashBoard = (state : WrapperDash = initialState , action:string )  =>{\r\n\r\n    \r\n       return state;\r\n    \r\n\r\n}\r\n\r\nexport default reducerDashBoard;","D:\\react-project\\04-exclusive-platform\\src\\Redux\\store.ts",[],["101","102"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard\\Dashboard_con.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\api\\api.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerGoogleLogin.ts",[],["103","104"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\header.tsx",["105"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\headerC.ts",[],["106","107"],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\types.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\interfaces.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Components\\ToDoList\\ToDoList.tsx",["108","109"],"import React, {  useRef, useEffect } from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, MenuItem, Menu,fade, Checkbox, Avatar, TextField, Button, Icon } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport \"./../../styles/ToDoList/ToDoList.scss\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AppState } from \"./../../Redux/store\";\r\nimport { checkedTodo, removeTodoAC, AddTodoAC, RefreshInput, LoadToDOAC } from \"../../Redux/reducerToDoList\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\nconst ToDoList = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n//////get array of todo list     \r\n    const { todo , inputTodo } = useSelector((state: AppState) =>\r\n      state.reducerToDO\r\n    );\r\n\r\n//// get username and image\r\n  const {urlImage,userName} = useSelector ((state:AppState) => state.reducerGoogleLogin.googleLogin);\r\n\r\n\r\n\r\n\r\n///// dispatch action creators\r\n    const dispatch = useDispatch();\r\n  \r\n\r\n\r\n   // not_completed \r\n\r\n    const completedTodo = (id:string) => {\r\n     dispatch(checkedTodo(id));\r\n    }\r\n\r\n\r\n\r\n\r\n    const removeTodo = ( id:string) => {\r\n\r\n      setTimeout(()=>dispatch(removeTodoAC(id)),100);\r\n      \r\n    }\r\n\r\n    let inputTodoREF = useRef<HTMLInputElement>();\r\n\r\n  const RefreshInputTodo = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n      dispatch(RefreshInput(event.target.value));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n///////Add todo click button\r\n  const addTodo = () => {\r\n  if(inputTodoREF.current!.value !== \"\"){\r\n    console.log(inputTodoREF.current!.value)\r\n    dispatch(AddTodoAC(inputTodoREF.current!.value));\r\n    inputTodoREF.current!.value = \"\";\r\n  }\r\n  }\r\n\r\n///////Add todo press button \"Enter\"\r\nconst KeyBoardAddTodo = (event:React.KeyboardEvent) => {\r\n  if(event.key === \"Enter\" && inputTodoREF.current!.value !== \"\"){\r\n    dispatch(AddTodoAC(inputTodoREF.current!.value));\r\n    inputTodoREF.current!.value = \"\";\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n  localStorage.getItem(\"TODO\") &&  dispatch(LoadToDOAC(JSON.parse(localStorage.getItem(\"TODO\")!))); \r\n},[])\r\n\r\nuseEffect(()=>{\r\n  localStorage.setItem(\"TODO\",JSON.stringify(todo));\r\n},[todo])\r\n\r\n//localStorage.setItem(\"TODO\",JSON.stringify(todo));\r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n\r\n<AppBar position=\"static\"  style = {{display:\"block\"}}>\r\n  <Toolbar className = \"todo_wrapper\">\r\n    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n      <MenuIcon />\r\n    </IconButton>\r\n\r\n    <Typography variant=\"h6\" className={classes.title}>\r\n      To Do List\r\n    </Typography>\r\n    \r\n      <div>\r\n  \r\n        <Menu\r\n          id=\"menu-appbar\"\r\n         // anchorEl={console.log(\"\")}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={false}\r\n          onClose={()=>alert(\"HELLO\")}\r\n        >\r\n          <MenuItem onClick={()=>alert(\"HELLO\")}>Profile</MenuItem>\r\n          <MenuItem onClick={()=>alert(\"HELLO\")}>My account</MenuItem>\r\n        </Menu>\r\n      </div>\r\n\r\n      \r\n      <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n\r\n\r\n          <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"menu-appbar\"\r\n          aria-haspopup=\"true\"\r\n         // onClick={console.log(\"\")}\r\n          color=\"inherit\"\r\n        >\r\n          <Avatar alt={userName} src={urlImage} />\r\n        </IconButton>\r\n  </Toolbar>\r\n</AppBar>\r\n</div>\r\n\r\n{/*////////// INPUT SECTION //////////// */}\r\n\r\n<section className=\"form_section\" >\r\n           <TextField\r\n          label=\"Enter new toDo\"\r\n          type=\"text\"\r\n          autoComplete=\"current-text\"\r\n          variant=\"filled\"\r\n          className = \"input_todo\"\r\n          defaultValue = {inputTodo}\r\n          onChange = {RefreshInputTodo}\r\n           inputRef = {inputTodoREF}\r\n           onKeyPress = {KeyBoardAddTodo}\r\n        />\r\n\r\n        <div className=\"btn-add-todo\">\r\n        <Button\r\n        onClick = {addTodo}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"\"\r\n        endIcon={<AddIcon/> }\r\n      ></Button>\r\n        </div>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n{/* ///////TO DO LIST ////////////*/}\r\n            <section className=\"todo_wrapper list_scroll\">\r\n\r\n                {\r\n\r\n                  todo.map((item,index) => (\r\n\r\n                    <div className = {item.completed ? \"todo_item completed\" : \"todo_item not_completed\" } key = {item.id} >\r\n                      \r\n                   <Checkbox style ={{marginLeft:20,marginRight:10,zIndex:3}} checked={item.completed} onChange={()=>completedTodo(item.id)} inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                  <div className=\"item_content\">{index+1}. {item.contentToDo}</div>\r\n                  <div className=\"time_added_todo\">{item.dateAdded}</div>\r\n                  <div className=\"btn_delete_todo\" onClick = {()=>removeTodo(item.id)}><DeleteIcon color = \"secondary\" /></div>\r\n                      </div>\r\n\r\n                  ))\r\n\r\n                }\r\n                    \r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerToDoList.ts",["110","111"],"\r\nimport { StateToDo, ActionCompletedTodo, Actions, IToDo } from './interfaces';\r\nimport { COMPLETE_TODO_ITEM, REMOVE_TODO_ITEM, ADD_NEW_TODO_ITEM, REFRESH_INPUT_TODO, LOAD_TODO_ITEM } from './types';\r\nimport { getDate } from './Global_functions';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState:StateToDo = {\r\n\r\n    todo: [],\r\n\r\n    inputTodo : \"\"\r\n}\r\n\r\nconst reducerToDO = (state:StateToDo = initialState , action :Actions) => {\r\n\r\n    switch(action.type){\r\n        case COMPLETE_TODO_ITEM: {\r\n\r\n            return {\r\n                ...state,\r\n         \r\n                 todo:state.todo.map(item  => {\r\n\r\n                    if(item.id == action.id ){\r\n                        console.log(\"equal\");\r\n                        return {...item,completed:!item.completed}\r\n\r\n                    }\r\n            \r\n                    return item;\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n\r\n        case REMOVE_TODO_ITEM : {\r\n            \r\n            return{\r\n                ...state,\r\n\r\n                todo: state.todo.filter(item => item.id !== action.id)\r\n       \r\n\r\n            }\r\n        \r\n        }\r\n\r\n        case REFRESH_INPUT_TODO: {\r\n\r\n            return {\r\n                ...state,\r\n                inputTodo : action.inputTodo\r\n            }\r\n        }\r\n\r\n        \r\n        case ADD_NEW_TODO_ITEM:{\r\n\r\n            let tempObject:IToDo = {\r\n                id:Date.now().toString(),\r\n                contentToDo : action.inputTodo,\r\n                completed : false,\r\n                dateAdded : `Added : ${getDate()}`\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                todo :  [...state.todo,tempObject],\r\n                \r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        case LOAD_TODO_ITEM : {\r\n\r\n            return{\r\n                ...state,\r\n                todo : action.local\r\n            }\r\n        }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport const checkedTodo = (id:string):Object  =>({\r\ntype : COMPLETE_TODO_ITEM,\r\nid\r\n})\r\n\r\nexport const removeTodoAC = (id:string) :Object =>({\r\ntype : REMOVE_TODO_ITEM,\r\nid\r\n})\r\n\r\nexport const AddTodoAC = (inputTodo:string) :Object =>({\r\ntype : ADD_NEW_TODO_ITEM,\r\ninputTodo\r\n})\r\n\r\n\r\nexport const RefreshInput = (inputTodo:string) :Object => ({\r\n    type : REFRESH_INPUT_TODO,\r\n    inputTodo\r\n    })\r\n\r\nexport const LoadToDOAC = (local : Array<IToDo>) =>({\r\n    type : LOAD_TODO_ITEM,\r\n    local\r\n})\r\nexport default reducerToDO;","D:\\react-project\\04-exclusive-platform\\src\\Components\\Home.tsx",[],["112","113"],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\Global_functions.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Components\\weather\\Weather.tsx",["114","115"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\MovieDB\\Movies.tsx",["116","117","118","119","120"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport s from './../../styles/Movies/movies-styles.module.scss'\r\nimport { Button } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst API_MOVIES = 'fc39a892f25b419d4c6ac17f382862a0';\r\n\r\n// get image films\r\n//https://image.tmdb.org/t/p/w185/zMcEalkxEiRjvmijliLBk0sYern.jpg\r\n\r\ninterface IImageSlider{\r\n    image : string\r\n}\r\n\r\n\r\nconst Movies = () => {\r\n\r\n\r\nconst [pageTopMovie,setTopMovie] = useState(1);\r\n\r\nconst[sliderPage,setSliderPage] = useState<number>(1);\r\n\r\nconst [moviesTop,setMoviesTop] = useState<IImageSlider[]>([]);\r\n\r\nlet images:Array<IImageSlider> = []\r\n\r\nconst getTopMovie = ()=>{\r\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_MOVIES}&language=ru-RU&page=${pageTopMovie}`)\r\n    .then((response:any)=>{\r\n        console.log(response);\r\n        const {data} = response;\r\n        \r\n    \r\n\r\n        setMoviesTop(data.results);\r\n\r\n\r\n\r\n        console.log(\"DATA : \" +  response.data.results)\r\n        console.log(moviesTop);\r\n    })\r\n    .catch((error:Error)=> console.log(error.message));\r\n}\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\ngetTopMovie()\r\n\r\n\r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <section >\r\n            <div className={s.toolbar + ' ' + s.wrapperMovie}>ToolBAR</div>\r\n            {moviesTop.map((img:any,index:any)=>(\r\n                index === sliderPage ?  <img src = {\"https://image.tmdb.org/t/p/w1280\" + img.backdrop_path} className = {s.imageTopSlider}></img> : \"\"\r\n               \r\n            ))}\r\n            <div className = {s.wrapperMovie}>\r\n\r\n      \r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick = {()=>setSliderPage(sliderPage - 1)}\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        Prev\r\n      </Button>\r\n      {/* This Button uses a Font Icon, see the installation instructions in the Icon component docs. */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick = {()=>setSliderPage(sliderPage + 1)}\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        Next\r\n      </Button>\r\n\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Movies;\r\n\r\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"121","replacedBy":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"134","line":1,"column":9,"nodeType":"127","messageId":"128","endLine":1,"endColumn":17},{"ruleId":"125","severity":1,"message":"135","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":17},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},{"ruleId":"121","replacedBy":"138"},{"ruleId":"123","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":62,"column":12,"nodeType":"142","endLine":62,"endColumn":14,"suggestions":"143"},{"ruleId":"121","replacedBy":"144"},{"ruleId":"123","replacedBy":"145"},{"ruleId":"125","severity":1,"message":"146","line":2,"column":121,"nodeType":"127","messageId":"128","endLine":2,"endColumn":125},{"ruleId":"140","severity":1,"message":"147","line":137,"column":3,"nodeType":"142","endLine":137,"endColumn":5,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"149","line":2,"column":21,"nodeType":"127","messageId":"128","endLine":2,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":28,"column":32,"nodeType":"152","messageId":"153","endLine":28,"endColumn":34},{"ruleId":"121","replacedBy":"154"},{"ruleId":"123","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":61,"column":115,"nodeType":"158","messageId":"159","endLine":61,"endColumn":116,"fix":"160"},{"ruleId":"156","severity":1,"message":"157","line":122,"column":36,"nodeType":"158","messageId":"159","endLine":122,"endColumn":37,"fix":"161"},{"ruleId":"125","severity":1,"message":"146","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":12},{"ruleId":"125","severity":1,"message":"162","line":22,"column":21,"nodeType":"127","messageId":"128","endLine":22,"endColumn":32},{"ruleId":"125","severity":1,"message":"163","line":28,"column":5,"nodeType":"127","messageId":"128","endLine":28,"endColumn":31},{"ruleId":"140","severity":1,"message":"164","line":57,"column":3,"nodeType":"142","endLine":57,"endColumn":5,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":67,"column":41,"nodeType":"168","endLine":67,"endColumn":140},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["169"],["170"],["169"],["170"],"'Route' is defined but never used.","'Settings' is defined but never used.","'Reducer' is defined but never used.",["169"],["170"],["169"],["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GoogleAC'. Either include it or remove the dependency array. If 'GoogleAC' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["171"],["169"],["170"],"'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["172"],"'ActionCompletedTodo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["169"],["170"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"173","text":"174"},{"range":"175","text":"174"},"'setTopMovie' is assigned a value but never used.","'images' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTopMovie'. Either include it or remove the dependency array.",["176"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},[2077,2080],"\r\n.",[3416,3419],{"desc":"181","fix":"182"},"Update the dependencies array to be: [GoogleAC]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},"Update the dependencies array to be: [getTopMovie]",{"range":"187","text":"188"},[1614,1616],"[GoogleAC]",[3526,3528],"[dispatch]",[1261,1263],"[getTopMovie]"]