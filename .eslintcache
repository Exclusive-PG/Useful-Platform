[{"D:\\react-project\\04-exclusive-platform\\src\\index.tsx":"1","D:\\react-project\\04-exclusive-platform\\src\\App.tsx":"2","D:\\react-project\\04-exclusive-platform\\src\\reportWebVitals.ts":"3","D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard.tsx":"4","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerMD.ts":"5","D:\\react-project\\04-exclusive-platform\\src\\Redux\\store.ts":"6","D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard\\Dashboard_con.ts":"7","D:\\react-project\\04-exclusive-platform\\src\\api\\api.ts":"8","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerGoogleLogin.ts":"9","D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\header.tsx":"10","D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\headerC.ts":"11","D:\\react-project\\04-exclusive-platform\\src\\Redux\\types.ts":"12","D:\\react-project\\04-exclusive-platform\\src\\Redux\\interfaces.ts":"13"},{"size":702,"mtime":1608063853192,"results":"14","hashOfConfig":"15"},{"size":400,"mtime":1608064055853,"results":"16","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1218,"mtime":1608064694516,"results":"18","hashOfConfig":"15"},{"size":765,"mtime":1607548216161,"results":"19","hashOfConfig":"15"},{"size":492,"mtime":1607963733226,"results":"20","hashOfConfig":"15"},{"size":460,"mtime":1607548247551,"results":"21","hashOfConfig":"15"},{"size":106,"mtime":1607364369970,"results":"22","hashOfConfig":"15"},{"size":1065,"mtime":1608062589745,"results":"23","hashOfConfig":"15"},{"size":2721,"mtime":1608062887129,"results":"24","hashOfConfig":"15"},{"size":896,"mtime":1607974363748,"results":"25","hashOfConfig":"15"},{"size":63,"mtime":1607708770910,"results":"26","hashOfConfig":"15"},{"size":769,"mtime":1607708688166,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"du34is",{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-project\\04-exclusive-platform\\src\\index.tsx",[],"D:\\react-project\\04-exclusive-platform\\src\\App.tsx",["63"],"import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport DashBoardC from \"./Components/MainDashboard/Dashboard_con\";\nimport HeaderC from \"./Components/header/headerC\";\nimport { Route } from \"react-router-dom\";\n\n\n\n\nconst App: React.FC = () => {\n  debugger;\n  return (\n  <Route>\n    <main className=\"app_wrapper\">\n     <HeaderC/>\n     <DashBoardC/>\n    </main>\n  );\n};\n\nexport default App;\n","D:\\react-project\\04-exclusive-platform\\src\\reportWebVitals.ts",[],["64","65"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard.tsx",["66"],"import React from 'react';\r\nimport s from \"./../styles/main_dashborad.module.css\";\r\nimport { WrapperDash } from './../Redux/interfaces';\r\nimport { Route , Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst MainDashBoard:React.FC<WrapperDash> = ({mainDash}) =>{\r\ndebugger\r\n\r\n\r\n\r\n    return(\r\n        <section className = {s.section_dashboard}>\r\n            <div className={s.grid}>\r\n                \r\n                   {\r\n                    mainDash.map(dash => (\r\n                        dash.isMain === true ? \r\n                       <Link to = {`/${dash.name.split(' ').join('')}`} className={s.main_section} key = {dash.id}> \r\n                              <div className={s.main_name_section}>{dash.name}</div>\r\n                              </Link>  \r\n                         : \r\n                         <Link to = {`/${dash.name.split(' ').join('')}`} className={s.section} key = {dash.id}>\r\n                              <div className={s.name_section}>{dash.name}</div>\r\n                          </Link>  \r\n                        \r\n                    ))\r\n                \r\n                }\r\n                   \r\n            \r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default MainDashBoard;","D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerMD.ts",["67","68"],"import {Settings} from '@material-ui/icons';\r\nimport { Reducer } from 'react';\r\nimport { WrapperDash } from './interfaces';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialState : WrapperDash = {\r\n    mainDash: [\r\n        {id:1 ,name : \"Settings\" , url : \"\" , isMain : true , action : \"\"},\r\n        {id:2 ,name : \"ToDo List\" , url : \"\", isMain : false , action : \"\"},\r\n        {id:3 ,name : \"Course Valut\",  url : \"\",  isMain : false , action : \"\"},\r\n        {id:4 ,name : \"Top Movies\" , url : \"\",  isMain : false , action : \"\"},\r\n        {id:5 ,name : \"Weather\" , url : \"\",  isMain : false , action : \"\"},\r\n    ],\r\n}\r\n\r\nconst reducerDashBoard = (state : WrapperDash = initialState , action:string )  =>{\r\n\r\n    \r\n       return state;\r\n    \r\n\r\n}\r\n\r\nexport default reducerDashBoard;",["69","70"],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\store.ts",[],["71","72"],"D:\\react-project\\04-exclusive-platform\\src\\Components\\MainDashboard\\Dashboard_con.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\api\\api.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\reducerGoogleLogin.ts",[],"D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\header.tsx",["73","74"],"import React, { useState, useEffect } from 'react';\r\nimport  './../../styles/main_header.scss';\r\nimport {Person , Mic} from '@material-ui/icons';\r\nimport {GoogleLogin, GoogleLoginResponse} from 'react-google-login';\r\nimport { ClientID } from './../../api/api';\r\nimport { PropsHeader } from './headerC';\r\nimport { IGoogleLoginData } from '../../Redux/interfaces';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Header:React.FC<PropsHeader> = ({googleLogin,GoogleAC}) =>{\r\n\r\ndebugger\r\n    //hook get date //DATE\r\n    const [date , setDate] = useState<string>(\"00:00\");\r\n\r\n    const getDate = ():string =>{\r\n    \r\n        let date:Date = new Date();\r\n        let hours :string | number = date.getHours();\r\n        let minutes :string | number = date.getMinutes();\r\n      \r\n      \r\n         hours = (hours < 10) ?  `0${hours}` : hours;\r\n         minutes =  (minutes < 10) ?  `0${minutes}` : minutes;\r\n      \r\n        return `${hours}:${minutes}`;\r\n      }\r\n\r\n\r\n      useEffect(()=>{\r\n        const interval =  setInterval(()=>{\r\n             setDate(getDate);\r\n         },1000);\r\n         return () => clearInterval(interval);\r\n     },[]);\r\n\r\n\r\n/// Load Google Account from LocalStorage\r\n     useEffect(()=>{\r\n         \r\nif(localStorage.getItem(\"SESSION_DATA\")){\r\n\r\n    let data:IGoogleLoginData = JSON.parse(localStorage.getItem(\"SESSION_DATA\")!);\r\n    \r\n    GoogleAC(data);\r\n    \r\n    }   \r\n     },[])\r\n\r\n////End Date ------------------------------------\r\n\r\n\r\n///Google Login\r\n\r\nconst responseGoogle =(response : GoogleLoginResponse) : void  =>{\r\n\r\n    console.log(response.getBasicProfile().getEmail());\r\n    const {name , imageUrl} = response.profileObj;\r\n    \r\n    \r\n\r\n/////  dispatch data Google Login ///\r\n\r\n    GoogleAC({\r\n       userName: name,urlImage : imageUrl,SignedTime : Date.now().toString(),isLocalStorage : true\r\n    });\r\n\r\n   \r\n\r\n    console.log(response);\r\n    console.log(`Sign in account : ${getDate()}`);\r\n}\r\n\r\n\r\n\r\n\r\n    return(\r\n        <header className = \"main__screen_header\">\r\n\r\n        <div className=\"left_block\">\r\n       \r\n        <GoogleLogin clientId = {ClientID} onSuccess= {responseGoogle} onFailure = {responseGoogle} />\r\n        \r\n        <div className=\"data-user\">\r\n        <div className=\"nickname_user\">{googleLogin.userName}</div>\r\n        <div >{googleLogin.urlImage ? <img className=\"image_user\" src = {googleLogin.urlImage} ></img> : <Person style = {{fontSize : 40,color:\"primary\"}}/> }</div>\r\n        </div>\r\n\r\n\r\n     </div>  \r\n            \r\n\r\n        <div className=\"right_block\">\r\n        <div className=\"date_now_user\">{date}</div>\r\n        <div className=\"microphone_search\"><Mic style = {{fontSize : 30,color:\"primary\"}} /></div>\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","D:\\react-project\\04-exclusive-platform\\src\\Components\\header\\headerC.ts",["75"],"import { connect } from \"react-redux\";\r\nimport Header from './header';\r\nimport { AppState } from \"../../Redux/store\";\r\nimport { IGoogleLogin, IGoogleLoginData } from \"../../Redux/interfaces\";\r\nimport { updateDataUserGoogleAC } from './../../Redux/reducerGoogleLogin';\r\nimport { Dispatch } from \"redux\";\r\nimport { IGoogleLoginAC } from './../../Redux/interfaces';\r\n\r\n\r\ntype propsAC = {\r\n    GoogleAC : (data : IGoogleLoginData) => void;\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppState) : IGoogleLogin => \r\n({\r\n    googleLogin: state.reducerGoogleLogin.googleLogin\r\n});\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch) : propsAC =>({\r\n GoogleAC : (data:IGoogleLoginData)  =>{\r\n   \r\n    dispatch(updateDataUserGoogleAC(data))\r\n }\r\n  \r\n})\r\n\r\nexport type PropsHeader = propsAC & IGoogleLogin;\r\n\r\nconst HeaderC = connect(mapStateToProps,mapDispatchToProps)(Header);\r\n\r\nexport default HeaderC;\r\n","D:\\react-project\\04-exclusive-platform\\src\\Redux\\types.ts",[],["76","77"],"D:\\react-project\\04-exclusive-platform\\src\\Redux\\interfaces.ts",[],{"ruleId":null,"fatal":true,"severity":2,"message":"78","line":19,"column":0},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":15},{"ruleId":"83","severity":1,"message":"87","line":1,"column":9,"nodeType":"85","messageId":"86","endLine":1,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":17},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"79","replacedBy":"91"},{"ruleId":"81","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":52,"column":8,"nodeType":"95","endLine":52,"endColumn":10,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":90,"column":39,"nodeType":"99","endLine":90,"endColumn":97},{"ruleId":"83","severity":1,"message":"100","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":24},{"ruleId":"79","replacedBy":"101"},{"ruleId":"81","replacedBy":"102"},"Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Settings' is defined but never used.","'Reducer' is defined but never used.",["103"],["104"],["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GoogleAC'. Either include it or remove the dependency array. If 'GoogleAC' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IGoogleLoginAC' is defined but never used.",["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [GoogleAC]",{"range":"108","text":"109"},[1368,1370],"[GoogleAC]"]